from pygame import *
font.init()
w_w = 700
w_h = 500
x1 = 50
x2 = 500
x3 = 550
y1 = 350
y2 = 300
y3 = 400
class Gamespite(sprite.Sprite):
    def __init__(self, p_im, p_x,p_y, p_s):
        super().__init__()
        self.image = transform.scale(image.load(p_im),(65,65))
        self.speed = p_s
        self.rect = self.image.get_rect()
        self.rect.x = p_x
        self.rect.y = p_y
        self.direction = "left"
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(Gamespite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < w_w - 80:
            self.rect.x += self.speed    
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < w_w - 80:
            self.rect.y += self.speed

class Enemy(Gamespite):
    def update(self):
        
        if self.rect.x <= 470:
            self.direction = "right"
        if self.rect.x >= w_w - 85:
            self.direction = "left"


        if self.direction == "left":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed



class Wall(sprite.Sprite):
    def __init__(self, color1, color2, color3, wall_x, wall_y, wallw, wallh):
        super().__init__()
        self.color1 = color1
        self.color2 = color2
        self.color3 = color3
        self.width = wallw
        self.height = wallh
        self.image = Surface((self.width, self.height))
        self.image.fill((color1, color2, color3))
        self.rect = self.image.get_rect()
        self.rect.x = wall_x
        self.rect.y = wall_y
    def draw_w(self):
        window.blit(self.image, (self.rect.x, self.rect.y))






window = display.set_mode((w_w,w_h))
display.set_caption("Лабиринт")
clock = time.Clock()
fps = 60
mixer.init()
mixer.music.load("jungles.ogg")
mixer.music.play()
font = font.Font(None, 70)
win = font.render("You win", True, (255, 215, 0))
lose = font.render("You lose", True, (255, 0, 0))
#задай фон сцены
bacgroop = transform.scale(image.load("background.jpg"), (700,500))
hero = Player("hero.png", x1,y1, 10)
monster = Enemy("cyborg.png", x2,y2,2)
final = Gamespite("treasure.png", x3,y3, 10)
walk = Wall(0, 255, 30, 30, 50, 10, 450)
walk1 = Wall(0, 255, 30, 30, 50, 650, 10)
walk2 = Wall(0, 255, 30, 680, 50, 10, 450)
walk3 = Wall(0, 255, 30, 120, 200, 10, 350)
walk4 = Wall(0, 255, 30, 470, 150, 10, 350)
walk5 = Wall(0, 255, 30, 260, 50, 10, 350)
walk6 = Wall(0, 255, 30, 370, 150, 10, 255)
walk7 = Wall(0, 255, 30, 260, 400, 120, 10)
game = True
finish = False

while game:
    
    
    for e in event.get():
        if e.type == QUIT:
            game = False    
    if finish != True:
        window.blit(bacgroop,(0,0))
        hero.reset()
        monster.update()
        monster.reset()
        walk.draw_w()
        walk1.draw_w()
        walk2.draw_w()
        walk3.draw_w()
        walk4.draw_w()
        walk5.draw_w()
        walk6.draw_w()
        walk7.draw_w()
        final.reset() 
        hero.update()



        if sprite.collide_rect(hero, final):
            finish = True
            window.blit(win, (200,200))
            
            
        if sprite.collide_rect(hero, monster) or sprite.collide_rect(hero, walk) or sprite.collide_rect(hero, walk1) or sprite.collide_rect(hero, walk2) or sprite.collide_rect(hero, walk3) or sprite.collide_rect(hero, walk4) or sprite.collide_rect(hero, walk5) or sprite.collide_rect(hero, walk6) or sprite.collide_rect(hero, walk7):
            finish = True
            window.blit(lose, (200,200))
            
            
            
        clock.tick(fps)
    display.update()
       
    
